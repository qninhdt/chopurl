# Define a limit zone based on client IP address
limit_req_zone $binary_remote_addr zone=ip_limit:10m rate=1000r/s;

upstream url-shorten-service-cluster {
    server url-shorten-service:8080;
}

upstream url-redirect-service-cluster {
    server url-redirect-service:8080;
}

server {
    listen 80;
    server_name localhost; 

    # CORS configuration
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, X-CSRF-Token' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Max-Age' '86400' always;

    location /create {
        # UNCOMMENT the following line to enable rate limiting
        # Apply rate limiting with a small burst allowance
        limit_req zone=ip_limit burst=100 nodelay;
        limit_req_status 429;
        
        proxy_pass http://url-shorten-service-cluster;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /short/ {
        # UNCOMMENT the following line to enable rate limiting
        # Apply rate limiting with a small burst allowance
        limit_req zone=ip_limit burst=100 nodelay;
        limit_req_status 429;
        
        proxy_pass http://url-redirect-service-cluster;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
