services:
  # API Gateway
  api-gateway:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./configs/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      url-shorten-service:
        condition: service_healthy
    networks:
      - chopurl-network

  # URL Shorten Service
  url-shorten-service:
    build:
      context: ./src/url-shorten-service
      dockerfile: Dockerfile
    environment:
      - ETCD_ADDRESS=etcd:2379
      - REDIS_SENTINEL_ADDRESS=redis-sentinel:26379
      - REDIS_MASTER_NAME=mymaster
      - REDIS_PASSWORD=your_redis_password
      - CASSANDRA_HOSTS=cassandra-1,cassandra-2,cassandra-3
      - CASSANDRA_KEYSPACE=chopurl_keyspace
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      etcd:
        condition: service_healthy
      redis-master:
        condition: service_healthy
      cassandra-1:
        condition: service_healthy
      cassandra-2:
        condition: service_healthy
      cassandra-3:
        condition: service_healthy
    networks:
      - chopurl-network

  url-redirect-service:
    build:
      context: ./src/url-redirect-service
      dockerfile: Dockerfile
    environment:
      - REDIS_SENTINEL_ADDRESS=redis-sentinel:26379
      - REDIS_MASTER_NAME=mymaster
      - REDIS_PASSWORD=your_redis_password
      - CASSANDRA_HOSTS=cassandra-1,cassandra-2,cassandra-3
      - CASSANDRA_KEYSPACE=chopurl_keyspace
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      redis-master:
        condition: service_healthy
      cassandra-1:
        condition: service_healthy
      cassandra-2:
        condition: service_healthy
      cassandra-3:
        condition: service_healthy
    networks:
      - chopurl-network

  # Etcd
  etcd:
    image: bitnami/etcd:latest
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    networks:
      - chopurl-network
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "status"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 20s # Etcd needs more time to initialize

  # Redis Replication Setup
  redis-master:
    image: redis:latest
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - redis-master-data:/data
      - ./configs/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - chopurl-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 5s

  redis-replica-1:
    image: redis:latest
    command: redis-server --replicaof redis-master 6379
    depends_on:
      redis-master:
        condition: service_healthy
    volumes:
      - redis-replica-1-data:/data
    networks:
      - chopurl-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 5s

  redis-replica-2:
    image: redis:latest
    command: ["redis-server", "--replicaof", "redis-master", "6379"]
    depends_on:
      redis-master:
        condition: service_healthy
    volumes:
      - redis-replica-2-data:/data
    networks:
      - chopurl-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 5s

  # Redis Sentinel
  redis-sentinel:
    image: redis:latest
    command: >
      sh -c 'echo "bind 0.0.0.0" > /etc/sentinel.conf &&
      echo "sentinel monitor mymaster redis-master 6379 2" >> /etc/sentinel.conf &&
      echo "sentinel resolve-hostnames yes" >> /etc/sentinel.conf &&
      echo "sentinel down-after-milliseconds mymaster 10000" >> /etc/sentinel.conf &&
      echo "sentinel failover-timeout mymaster 10000" >> /etc/sentinel.conf &&
      echo "sentinel parallel-syncs mymaster 1" >> /etc/sentinel.conf &&
      redis-sentinel /etc/sentinel.conf'
    depends_on:
      - redis-master
      - redis-replica-1
      - redis-replica-2
    networks:
      - chopurl-network

  # Cassandra Seed Node
  cassandra-1:
    image: cassandra:latest
    volumes:
      - cassandra-1-data:/var/lib/cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=chopurl-cassandra-cluster
      - CASSANDRA_DC=DC1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_SEEDS=cassandra-1
      - MAX_HEAP_SIZE=512M
      - HEAP_NEWSIZE=100M
      - CASSANDRA_NUM_TOKENS=128
    networks:
      - chopurl-network
    ports:
      - "9042:9042"
    healthcheck:
      test: ["CMD-SHELL", "nodetool status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s # Cassandra needs significant time to initialize

  # Non-seed Cassandra nodes
  cassandra-2:
    image: cassandra:latest
    volumes:
      - cassandra-2-data:/var/lib/cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=chopurl-cassandra-cluster
      - CASSANDRA_DC=DC1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_SEEDS=cassandra-1
      - MAX_HEAP_SIZE=512M
      - HEAP_NEWSIZE=100M
      - CASSANDRA_NUM_TOKENS=128
    networks:
      - chopurl-network
    depends_on:
      cassandra-1:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "nodetool status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s # Cassandra needs significant time to initialize

  cassandra-3:
    image: cassandra:latest
    volumes:
      - cassandra-3-data:/var/lib/cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=chopurl-cassandra-cluster
      - CASSANDRA_DC=DC1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_SEEDS=cassandra-1
      - MAX_HEAP_SIZE=512M
      - HEAP_NEWSIZE=100M
      - CASSANDRA_NUM_TOKENS=128
    networks:
      - chopurl-network
    depends_on:
      cassandra-2:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "nodetool status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s # Cassandra needs significant time to initialize


  cassandra-init:
    image: cassandra:latest
    depends_on:
      cassandra-1:
        condition: service_healthy
      cassandra-2:
        condition: service_healthy
      cassandra-3:
        condition: service_healthy
    volumes:
      - ./configs/cassandra/:/configs/cassandra/
    command: cqlsh cassandra-1 -f /configs/cassandra/init.cql
    networks:
      - chopurl-network

networks:
  chopurl-network:
    driver: bridge

volumes:
  cassandra-1-data:
  cassandra-2-data:
  cassandra-3-data:
  redis-master-data:
  redis-replica-1-data:
  redis-replica-2-data:
